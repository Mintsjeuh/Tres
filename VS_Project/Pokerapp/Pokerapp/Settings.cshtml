@using WebMatrix.Data
@{
    //Database connection
    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //Retrieving the url code
    string url = Request.Url.AbsolutePath;
    string urlcode = url.Substring(url.Length - 7);
    int code = Convert.ToInt32(urlcode);

    #region Validators
    if (Request.Cookies["LoginCookie"] is null || Request.Cookies["LoginCookie"].Value != "true")
    {
        Response.Redirect("~/Login.cshtml");
    }

    //Mogen comments bij
    Validation.Add("round_time", Validator.StringLength(8, 8, "MESSAGE"));
    Validation.Add("pause_time", Validator.StringLength(8, 0, "MESSAGE"));
    Validation.Add("blind_time", Validator.StringLength(8, 0, "MESSAGE"));
    Validation.Add("min_table", Validator.StringLength(2, 1, "MESSAGE"));
    Validation.Add("max_table", Validator.StringLength(2, 1, "MESSAGE"));
    Validation.Add("start_value", Validator.StringLength(3, 1, "MESSAGE"));
    Validation.Add("table_amount", Validator.StringLength(2, 1, "MESSAGE"));
    Validation.Add("rebuy", Validator.StringLength(1, 1, "MESSAGE"));
    Validation.Add("chip1", Validator.StringLength(3, 1, "MESSAGE"));
    Validation.Add("chip2", Validator.StringLength(3, 1, "MESSAGE"));
    Validation.Add("chip3", Validator.StringLength(3, 1, "MESSAGE"));
    Validation.Add("chip4", Validator.StringLength(3, 1, "MESSAGE"));
    Validation.Add("chip5", Validator.StringLength(3, 1, "MESSAGE"));
    #endregion

    #region Setting default
    var round_time = "00:30:00";
    var pause_time = "00:00:00";
    var blind_time = "00:00:00";
    int min_table = 4;
    int max_table_amount = 6;
    int start_value = 10;
    int table_amount = 1;
    int rebuy = 0;
    int chip_worth1 = 1;
    int chip_worth2 = 2;
    int chip_worth3 = 3;
    int chip_worth4 = 4;
    int chip_worth5 = 5;
    #endregion

    #region Retrieving from database
    dynamic room = db.QueryValue("SELECT Room_Code FROM Room WHERE Room_Code = @0", code);
    if (room == code)
    {
        //Comments plz
        //Haal de object "room" op uit de database en haal daar alle waardes uit. Is minder resource intensive
        round_time = Convert.ToString(db.QueryValue("SELECT Round_Time FROM Room WHERE Room_Code = @0", code));
        pause_time = Convert.ToString(db.QueryValue("SELECT Pause_Time FROM Room WHERE Room_Code = @0", code));
        blind_time = Convert.ToString(db.QueryValue("SELECT Blind_Time FROM Room WHERE Room_Code = @0", code));
        min_table = Convert.ToInt32(db.QueryValue("SELECT Tbl_Min_Size FROM Room WHERE Room_Code = @0", code));
        max_table_amount = Convert.ToInt32(db.QueryValue("SELECT Tbl_Max_Size FROM Room WHERE Room_Code = @0", code));
        start_value = Convert.ToInt32(db.QueryValue("SELECT Start_Value FROM Room WHERE Room_Code = @0", code));
        table_amount = Convert.ToInt32(db.QueryValue("SELECT Tbl_Amount FROM Room WHERE Room_Code = @0", code));
        rebuy = Convert.ToInt32(db.QueryValue("SELECT Allow_Rebuy FROM Room WHERE Room_Code = @0", code));
        chip_worth1 = Convert.ToInt32(db.QueryValue("SELECT Chip_1_Worth FROM Room WHERE Room_Code = @0", code));
        chip_worth2 = Convert.ToInt32(db.QueryValue("SELECT Chip_2_Worth FROM Room WHERE Room_Code = @0", code));
        chip_worth3 = Convert.ToInt32(db.QueryValue("SELECT Chip_3_Worth FROM Room WHERE Room_Code = @0", code));
        chip_worth4 = Convert.ToInt32(db.QueryValue("SELECT Chip_4_Worth FROM Room WHERE Room_Code = @0", code));
        chip_worth5 = Convert.ToInt32(db.QueryValue("SELECT Chip_5_Worth FROM Room WHERE Room_Code = @0", code));
    }
    #endregion

    #region Saving logic
    void Save()
    {
        int players = Convert.ToInt32(Request["nr_players"]);
        var time = Request["round_time"];
        int min_table_size = Convert.ToInt32(Request["min_table"]);
        int max_table_size = Convert.ToInt32(Request["max_table"]);
        int allow_rebuy = Convert.ToInt32(Request["rebuy"]);
        var pause = Request["pause_time"];
        var blind = Request["blind_time"];
        int value = Convert.ToInt32(Request["start_value"]);
        int tbl_amount = Convert.ToInt32(Request["tbl_amount"]);
        int chip1 = Convert.ToInt32(Request["chip1"]);
        int chip2 = Convert.ToInt32(Request["chip2"]);
        int chip3 = Convert.ToInt32(Request["chip3"]);
        int chip4 = Convert.ToInt32(Request["chip4"]);
        int chip5 = Convert.ToInt32(Request["chip5"]);
        var started = 0;
        int blind_round = 1;
        int small = 0;
        int big = 0;

        var check = db.QueryValue("SELECT Room_Code FROM Room WHERE Room_Code = @0", code);
        if (check == code)
        {
            db.Execute("UPDATE Room SET Room_Code = @0, Tbl_Min_Size = @1, Started = @2, Chip_1_Worth = @3, Chip_2_Worth = @4, Chip_3_Worth = @5, Chip_4_Worth = @6, Chip_5_Worth = @7, Round_Time = @8, Pause_Time = @9, Blind_Time = @10, Allow_Rebuy = @11, Start_Value = @12, Tbl_Amount = @13, Tbl_Max_Size = @14, Blind_Round = 1, Small_Blind = 0, Big_Blind = 0 WHERE Room_Code = @0"
            , code, min_table_size, started, chip1, chip2, chip3, chip4, chip5, time, pause, blind, allow_rebuy, value, tbl_amount, max_table_size);
        }
        else
        {
            db.Execute("INSERT INTO Room (Room_Code, Tbl_Min_Size, Started, Chip_1_Worth, Chip_2_Worth, Chip_3_Worth, Chip_4_Worth, Chip_5_Worth, Round_Time, Pause_Time, Blind_Time, Allow_Rebuy, Start_Value, Tbl_Amount, Tbl_Max_Size, Blind_Round, Small_Blind, Big_Blind)" +
            "VALUES (@0, @1, @2, @3, @4, @5, @6, @7, @8, @9, @10, @11, @12, @13, @14, @15, @16, @17)", code, min_table_size, started, chip1, chip2, chip3, chip4, chip5, time, pause, blind, allow_rebuy, value, tbl_amount, max_table_size, blind_round, small, big);
        }
    }
    #endregion

    if (IsPost && Validation.IsValid() && Request.UrlReferrer.AbsolutePath == Request.Url.AbsolutePath)
    {
        if (Request["Proceed"] == "Proceed")
        {
            Save();
            Response.Redirect("~/AdminPage.cshtml/" + code);
        }
        else if (Request["save"] == "Save")
        {
            Save();
        }
        else
        {
            Response.Redirect("~/Login.cshtml");
        }
    }
}

<h1>Settings</h1>
<form name="Settings" method="post">
    <p>Start value</p>
    <input type="number" name="start_value" value="@start_value" /><br />
    <br />
    @Html.ValidationMessage("start_value")
    <p>Time per round</p>
    <input type="text" name="round_time" value="@round_time" /><br />
    <br />
    @Html.ValidationMessage("round_time")
    <p>Time for pause</p>
    <input type="text" name="pause_time" value="@pause_time" /><br />
    <br />
    @Html.ValidationMessage("pause_time")
    <p>Time for blind</p>
    <input type="text" name="blind_time" value="@blind_time" /><br />
    <br />
    @Html.ValidationMessage("blind_time")
    <p>Minimum players per table</p>
    <input type="number" name="min_table" value="@min_table" /><br />
    <br />
    @Html.ValidationMessage("min_table")
    <p>Maximum players per table</p>
    <input type="number" name="max_table" value="@max_table_amount" /><br />
    <br />
    @Html.ValidationMessage("max_table")
    <p>Amount of tables</p>
    <input type="number" name="tbl_amount" value="@table_amount" /><br />
    <br />
    @Html.ValidationMessage("table_amount")
    <p>Allow rebuy</p>
    <input type="text" name="rebuy" value="@rebuy" /><br />
    <br />
    @Html.ValidationMessage("rebuy")
    <p>Chipworth chip 1</p>
    <input type="number" name="chip1" value="@chip_worth1" /><br />
    <br />
    @Html.ValidationMessage("chip1")
    <p>Chipworth chip 2</p>
    <input type="number" name="chip2" value="@chip_worth2" /><br />
    <br />
    @Html.ValidationMessage("chip2")
    <p>Chipworth chip 3</p>
    <input type="number" name="chip3" value="@chip_worth3" /><br />
    <br />
    @Html.ValidationMessage("chip3")
    <p>Chipworth chip 4</p>
    <input type="number" name="chip4" value="@chip_worth4" /><br />
    <br />
    @Html.ValidationMessage("chip4")
    <p>Chipworth chip 5</p>
    <input type="number" name="chip5" value="@chip_worth5" /><br />
    <br /><br />
    @Html.ValidationMessage("chip5")
    <input type="submit" name="Proceed" value="Proceed" />
    <br />
</form>