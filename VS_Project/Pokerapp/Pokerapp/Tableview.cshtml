@using WebMatrix.Data
@{
    Layout = "~/_Layout.cshtml";
    //Gets roomcode and tablenumber
    int roomCode = Request.QueryString["roomcode"].AsInt();
    int table = Request.QueryString["table"].AsInt();
    Page.Title = "Table" + table;

    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //Creates roomcode
    string Url = "RulesPageNL/" + roomCode;
    string urlBack = "Players/" + roomCode;

    //Splits number of names in two 
    var namen = db.Query("SELECT Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1", roomCode, table);
    int aantal = namen.Count();
    double gedeeld = aantal / 2;
    int helft = Convert.ToInt32(gedeeld);
    int eerste = Convert.ToInt32(aantal - helft);
    int tweede = Convert.ToInt32(eerste - 1);
    if (aantal % 2 == 0)
    {
        tweede = eerste;
    }

    //Gets startvalue
    int startvalue = db.QueryValue("SELECT Start_Value FROM Room WHERE Room_Code = @0", roomCode);

    //If minimum size is reached reshuffle names by tables
    int players = db.QueryValue("SELECT COUNT(Name) FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1", roomCode, table);
    /*if (min_size >= players)
    {
        <script>
            $(document).ready(function () {
                alert("The minimum size has been reached!");
            })
        </script>
        Shuffle shuffle = new Shuffle();
        shuffle.ShuffleTable(db, roomCode);
        Url = "Players.cshtml/" + roomCode;
        Response.Redirect("~/" + Url);
    }*/

    dynamic room = db.QuerySingle("SELECT * FROM Room WHERE Room_Code = @0", roomCode);
    TimeSpan startTime;
    if (room.Started_Time != null)
    {
        startTime = DateTime.Now - room.Started_Time;
    }
    else
    {
        startTime = TimeSpan.Zero;
    }
    TimeSpan pauseTime = room.Pause_Time;
    TimeSpan blindTime = room.Blind_Time;
    int hrs = startTime.Hours;
    int mns = startTime.Minutes;
    int scs = startTime.Seconds;
    int started = Convert.ToInt32(room.Started);
    TimeSpan totalRoundTimer = room.Round_Time;
    dynamic blinds = db.Query("SELECT ValueSB, ValueBB FROM Blinds WHERE Room_Code = @0", roomCode);
    var small = blinds[0].ValueSB;
    var big = blinds[0].ValueBB;
}
<div class="header">
    <div style="cursor:pointer; float:right; margin-top:40px;margin-right:70px" class="btn btn-primary clickableBtn" data-href="@Url">
        Rules
    </div>
    <div style="cursor:pointer; float:right; margin-top:40px;margin-right:10px" class="btn btn-primary clickableBtn" data-href="@urlBack">
        Back
    </div>
</div>
<div class="py-5">
    <!--Filling JS variables-->
    <div style="display: none;">
        <p id="Hours">@hrs</p>
        <p id="Minutes">@mns</p>
        <p id="Seconds">@scs</p>
        <p id="Time">@startTime.TotalSeconds</p>
        <p id="Blinds">@blindTime.TotalSeconds</p>
        <p id="Pause">@pauseTime.TotalSeconds</p>
        <p id="Started">@started</p>
        <p id="BlindIndex"></p>
        <p id="roomCode">@roomCode</p>
        <p id="table">@table</p>
        <p id="totalRoundTimer">@totalRoundTimer.TotalSeconds</p>
    </div>
    <!--Start the page-->
    <div class="container">
        <div class="col-md-12 text-center">
            <h1>Table @table</h1>
        </div>
        <div class="col-md-12 text-center">
            @if (started == 0)
            {
                <div name=timer class="timer">Game not running</div>
            }
            else
            {
                <div name=timer class="timer">loading timer...</div>
            }
            <div name="timer" class="timer"></div>
            <div class="round">This is round: <span id="rnumber">1</span></div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <p>Starting capital: @startvalue</p>
                <p>Small blind: <span id="SB">@small</span></p>
                <p>Big blind: <span id="BB">@big</span></p>
                <form method="post">
                    <input class="btn btn-outline-secondary" type="submit" name="blindnext" value="Raise blinds" />
                </form>
            </div>
            <div class="gridd">
                <div class="white"></div>
                <div class="white2"></div>
                <div class="white3"></div>
                <div class="white4"></div>
                @if (aantal <= 7)
                {
                    foreach (var a in db.Query("SELECT TOP (@2) Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1 ORDER BY Name DESC", roomCode, table, tweede))
                    {
                        <div class="chair2">
                            <img src="~/stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }

                    foreach (var a in db.Query("SELECT TOP (@0) Name FROM Players WHERE Room_Code = @1 AND Tbl_nr = @2 ORDER BY Name ASC", eerste, roomCode, table))
                    {

                        <div class="chair">
                            <img src="~/stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }
                }
                @if (aantal > 7)
                {       
                    foreach (var a in db.Query("SELECT Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1 ORDER BY Name ASC", roomCode, table))
                    {
                        <div class="chair">
                            <img src="stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }
                }

                <div class="table">
                    <img src="~/tafel.png" name="pokertable" style="height:250px; width:100%" />
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade show in" data-target="#myModal" data-toggle="modal" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog">
        <div class="v-cell">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Round is over</h4>
                </div>
                <div class="modal-body">
                    Next round starts in: <b>@room.Pause_Time</b>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.3.1.js"
        integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
        crossorigin="anonymous"></script>
@if(started == 1)
{
<script>
    var roomcode = $("#roomCode").html();
    var table = $("#table").html();
    var hrs = $('#Hours').html();
    var mns = $('#Minutes').html();
    var scs = $('#Seconds').html();
    var blind = $('#Blinds').html();
    var pause = $('#pause').html();
    var started = $('#Started').html();
    var timeTotal = $('#Time').html();
    var totalRoundTimer = $('#totalRoundTimer').html();
    console.log("roomcode" + roomcode);
    console.log("table" + table);
    console.log("blind" + blind);
    console.log("pause" + pause);
    console.log("started" + started);

    //Ajax connect with url Timer get the data roomcode

    var currentHours = hrs;
    var currentMinutes = mns;
    var currentSeconds = scs;
    
    //Increment timer
    setInterval(function () {
        totalSecs = currentSeconds + (currentMinutes * 60) + (currentHours * 1440); 
        console.log("Timer: " + hrs + ":" + mns + ":" + scs);
        console.log("Blind: " + blind);
        console.log("Blind Modulus " + parseInt(totalSecs % blind));
        console.log(totalSecs);
        var displayHours = currentHours;
        var displayMinutes = currentMinutes;
        var displaySeconds = currentSeconds;
    
        sessionStorage.setItem("timer", displayHours);
    
    
        if (currentHours.toString().length < 2) {
            displayHours = "0" + currentHours;
        }
    
        if (currentMinutes.toString().length < 2) {
            displayMinutes = "0" + currentMinutes;
        }
    
        if (currentSeconds.toString().length < 2) {
            displaySeconds = "0" + currentSeconds;
        }
    
        document.querySelector('.timer').innerHTML = "Game Time: " + displayHours + ":" + displayMinutes + ":" + displaySeconds;
    
        if (totalSecs % blind === 0) {
            $.ajax({
                url: "BlindTimer.cshtml",
                type: "get",
                data: {
                    roomCode: roomcode,
                    blind: blind,
                    totalSecs: totalSecs
                },
                success: function (response) {
                    response = response.split("-")
                    console.log(response);
                    console.log("SB: " + response[1] + "BB" + response[2]);
                    document.querySelector('#SB').innerHTML = response[1];
                    document.querySelector('#BB').innerHTML = response[2];
                }
            })
        }
        if (totalSecs % totalRoundTimer === 0) {
            $.ajax({
                url: "RoundTimer.cshtml",
                type: "get",
                data: {
                    roundTimer: totalRoundTimer,
                    totalSecs: totalSecs
                },
                success: function (response) {
                    console.log("Round: " + response);
                    document.querySelector('#rnumber').innerHTML = response;
                }
            })
        }
        /*if (totalSecs % pause === 0) {
            $.ajax({
                url: "PauseTimer.cshtml",
                type: "get",
                data: {
                    pauseTimer: totalpauseTimer,
                    totalSecs: totalSecs
                },
                success: function (response) {
                    console.log("Round: " + response);
                    $
                }
            })
        }*/
    
        currentSeconds++;
    
        if (currentSeconds == 60) {
            currentMinutes++;
            currentSeconds = 0;
        }
    
        if (currentMinutes == 60) {
            currentHours++;
            currentMinutes = 0;
        }
    }, 1000);
    
</script>
}
<script>
    jQuery(document).ready(function ($) {
        $(".clickable").click(function () {
            window.location = $(this).find("a:first").attr("href");
        });
    });
    jQuery(document).ready(function ($) {
        $(".clickableBtn").click(function () {
            window.location = $(this).data("href");
        });
    });
</script>