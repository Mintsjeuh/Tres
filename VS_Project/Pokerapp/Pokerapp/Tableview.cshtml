@using WebMatrix.Data

@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Select Game";

    string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\Database.mdf;Integrated Security=True";
    string provider = "System.Data.SqlClient";
    Database db = Database.OpenConnectionString(connectionString, provider);

    //Gets roomcode
    int roomCode = Request.QueryString["roomcode"].AsInt();
    int table = Request.QueryString["table"].AsInt();
    string Url = "RulesPageNL/" + roomCode;
    string urlBack = "Players/" + roomCode;

    //Splits number of names in two 
    var namen = db.Query("SELECT Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1", roomCode, table);
    int aantal = namen.Count();
    double gedeeld = aantal / 2;
    int helft = Convert.ToInt32(gedeeld);
    int eerste = Convert.ToInt32(aantal - helft);
    int tweede = Convert.ToInt32(eerste - 1);
    if (aantal % 2 == 0)
    {
        tweede = eerste;
    }
    //if (aantal > 10)    //Haal max spelers uit database
    //{
    //    string Url = "Players.cshtml/" + roomCode;
    //    Response.Redirect("~/" + Url);
    //}

    //Raises the current blinds
    if (IsPost && !Request["blindnext"].IsEmpty())
    {
        int current_Round = db.QueryValue("SELECT Blind_Round FROM Room WHERE Room_Code = @0", roomCode);
        int new_Round = current_Round + 1;
        db.Execute("UPDATE Room SET Blind_Round = @0 WHERE Room_Code = @1", new_Round, roomCode);
        <script>
            $(document).ready(function() {
                alert("The blind has been raised!");
            })
        </script>
    }
    int id = db.QueryValue("SELECT Blind_Round FROM Room WHERE Room_Code = @0", roomCode);
    var blind_id = db.Query("SELECT Top (@0) ID FROM Blinds WHERE Room_Code = @1 ORDER BY ID ASC", id, roomCode);
    int min_size = db.QueryValue("SELECT Tbl_Min_Size FROM Room WHERE Room_Code = @0", roomCode);
    var small_blind = db.Query("SELECT TOP (@0) ValueSB FROM Blinds WHERE Room_Code = @1 ORDER BY ID ASC", id, roomCode);
    int small = 0;
    foreach (var a in small_blind)
    {
        if (a.ValueSB > small)
        {
            small = a.ValueSB;
        }
    }
    var big_blind = db.Query("SELECT TOP (@0) ValueBB FROM Blinds WHERE Room_Code = @1 ORDER BY ID ASC", id, roomCode);
    int big = 0;
    foreach (var a in big_blind)
    {
        if (a.ValueBB > big)
        {
            big = a.ValueBB;
        }
    }

    //Updats blinds
    db.Execute("UPDATE Room SET Small_Blind = @0, Big_Blind = @1 WHERE Room_Code = @2", small, big, roomCode);

    //If minimum size is reached reshuffle names by tables
    int players = db.QueryValue("SELECT COUNT(Name) FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1", roomCode, table);
    if (min_size >= players)
    {
    <script>
        $(document).ready(function () {
            alert("The minimum size has been reached!");
        })
    </script>
        Shuffle shuffle = new Shuffle();
        shuffle.ShuffleTable(db, roomCode);
        Url = "Players.cshtml/" + roomCode;
        Response.Redirect("~/" + Url);
    }

    //Synchronizes the timer with the database timer
    dynamic room = db.QuerySingle("SELECT * FROM Room WHERE Room_Code = @0", roomCode);
    TimeSpan startTime;
    if (room.Started_Time != null)
    {
        startTime = DateTime.Now - room.Started_Time;
    }
    else
    {
        startTime = TimeSpan.Zero;
    }
    DateTime pauzeTime = DateTime.Now + room.Pause_Time;
    DateTime blindTime = DateTime.Now + room.Blind_Time;
    //startTime.AddHours(Convert.ToInt32(DateTime.Now.Date - startTime.Date) * 24);
    //startTime.AddDays(-Convert.ToInt32(DateTime.Now.Date - startTime.Date));
    int hrs = startTime.Hours;
    int mns = startTime.Minutes;
    int scs = startTime.Seconds;
}

}

        <div class="header">
            <div style="cursor:pointer; float:right; margin-top:40px;margin-right:70px" class="btn btn-primary clickableBtn" data-href="@Url">
                Rules
            </div>
            <div style="cursor:pointer; float:right; margin-top:40px;margin-right:10px" class="btn btn-primary clickableBtn" data-href="@urlBack">
                Back
            </div>
        </div>
<div class="py-5">
    <div class="hidden"><p id="Hours">@hrs</p><p id="Minutes">@mns</p><p id="Seconds">@scs</p></div>
    <div class="container">
        <div class="col-md-12 text-center">
            <h1>Table @table</h1>
        </div>
        <div class="col-md-12 text-center">
            <div id="roomCode" style="display:none;">@roomCode</div>
            <div id="table" style="display:none;">@table</div>

            <div name="timer" class="timer">loading timer...</div>
            <div class="round">This is round: <span id="rnumber"></span></div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <p>Small blind: @small</p>
                <p>Big blind: @big</p>
                <form method="post">
                    <input class="btn btn-outline-secondary" type="submit" name="blindnext" value="Raise blinds" />
                </form>
            </div>
            <div class="gridd">
                <div class="white"></div>
                <div class="white2"></div>
                <div class="white3"></div>
                <div class="white4"></div>
                @if (aantal <= 7)
                {
                    foreach (var a in db.Query("SELECT TOP (@2) Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1 ORDER BY Name DESC", roomCode, table, tweede))
                    {
                        <div class="chair2">
                            <img src="~/stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }

                    foreach (var a in db.Query("SELECT TOP (@0) Name FROM Players WHERE Room_Code = @1 AND Tbl_nr = @2 ORDER BY Name ASC", eerste, roomCode, table))
                    {

                        <div class="chair">
                            <img src="~/stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }
                }
                @if (aantal > 7)
                {
                    foreach (var a in db.Query("SELECT Name FROM Players WHERE Room_Code = @0 AND Tbl_nr = @1 ORDER BY Name ASC", roomCode, table))
                    {
                        <div class="chair">
                            <img src="stoel.png" alt="chair" style="width:75px;height:75px" />
                            <b>@a.Name</b>
                        </div>
                    }
                }

                <div class="table">
                    <img src="~/tafel.png" name="pokertable" style="height:250px; width:100%" />
                </div>
            </div>
        </div>
    </div>
</div>



<script
  src="https://code.jquery.com/jquery-3.3.1.js"
  integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
  crossorigin="anonymous"></script>
<script>
    var roomcode = $("#roomCode").html();
    $("#roomCode").remove();
    
    var table = $("#table").html();
    $("#table").remove();

    var hrs = $('#Hours').html();
    var mns = $('#Minutes').html();
    var scs = $('#Seconds').html();
    
    console.log("roomcode" + roomcode);
    console.log("table" + table);
    //Ajax connect with url Timer get the data roomcode
    $.ajax({
        url: "Timer.cshtml",
        type: "get",
        data: {
            roomCode: roomcode,
            table: table
        },
        success: function (response) {
            startTimer(response); // Returns timer from db
        }
    });
    
    
    function startTimer(timer) {
        var timer = timer.split(":"); // Split timer
    
        var targetHours = parseInt(timer[0]); // Parse hours to int
        var targetMinutes = parseInt(timer[1]);
        var targetSeconds = parseInt(timer[2]);
    
        var currentHours = hrs;
        var currentMinutes = mns;
        var currentSeconds = scs;
    
        var round = 1;
        document.querySelector('#rnumber').innerHTML = round;
    
        //Increment timer
        setInterval(function () {
            var displayHours = currentHours;
            var displayMinutes = currentMinutes;
            var displaySeconds = currentSeconds;
    
            sessionStorage.setItem("timer", displayHours);
    
    
            if (currentHours.toString().length < 2) {
                displayHours = "0" + currentHours;
            }
    
            if (currentMinutes.toString().length < 2) {
                displayMinutes = "0" + currentMinutes;
            }
    
            if (currentSeconds.toString().length < 2) {
                displaySeconds = "0" + currentSeconds;
            }
    
            document.querySelector('.timer').innerHTML = displayHours + ":" + displayMinutes + ":" + displaySeconds;
    
    
            // if condition is met round + 1
            if (currentHours == targetHours && currentMinutes == targetMinutes && currentSeconds == targetSeconds) {
                round++;
                document.querySelector('#rnumber').innerHTML = round;
    
                currentHours = 0;
                currentMinutes = 0;
                currentSeconds = 0;
            }
    
            currentSeconds++;
    
            if (currentSeconds == 60) {
                currentMinutes++;
                currentSeconds = 0;
            }
    
            if (currentMinutes == 60) {
                currentHours++;
                currentMinutes = 0;
            }
        }, 1000);
    }
</script>